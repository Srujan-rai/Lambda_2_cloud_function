const PRIZE_CATALOGUE_COUNTERS = {
    TOTAL_AVAILABLE: 'total_available',
    TOTAL_AMOUNT: 'total_amount',
    TOTAL_CLAIMED: 'total_claimed',
    TOTAL_EXPIRED: 'total_expired',
    TOTAL_REMOVED: 'total_removed',
    TOTAL_RESERVED: 'total_reserved',
    TOTAL_REDEEMED: 'total_redeemed',
};

module.exports = {
    MIXCODE_REQUEST: {
        // after this time the request will end with ETIMEDOUT error code. The average time for the request to pass on PROD is 500ms
        timeout: process.env.mixcodesTimeout,
        // We are reducing the retry, because by default "got" library has limit of 2
        // and delay between the retry attempts of - ((2 ** (retryCount - 1)) * 1000) + Math.random() * 100
        retryCount: 1,
        reqRetryAttempts: 2,
    },
    EMAIL_TEMPLATE_IMAGE_FOLDER_NAME: 'emailTemplates',
    TRANSACTION_TYPES: {
        earn: 1,
        spend: 2,
        expired: 3,
    },
    LAMBDA_PREFIX: `${process.env.apiName}-${process.env.stageName}-`,
    DIGITAL_CODES_STATUS: {
        AVAILABLE: 'available',
        RESERVED: 'reserved',
        CLAIMED: 'claimed',
        EXPIRED: 'expired',
        REMOVED: 'removed',
        REDEEMED: 'redeemed',
        LOCKED: 'locked',
    },
    PRIZE_CATALOGUE_COUNTERS,
    VOUCHER_STATUS_TO_PRIZE_COUNTER_MAP: {
        available: PRIZE_CATALOGUE_COUNTERS.TOTAL_AVAILABLE,
        reserved: PRIZE_CATALOGUE_COUNTERS.TOTAL_RESERVED,
        claimed: PRIZE_CATALOGUE_COUNTERS.TOTAL_CLAIMED,
        expired: PRIZE_CATALOGUE_COUNTERS.TOTAL_EXPIRED,
        removed: PRIZE_CATALOGUE_COUNTERS.TOTAL_REMOVED,
        redeemed: PRIZE_CATALOGUE_COUNTERS.TOTAL_REDEEMED,
    },
    WINNING_MOMENTS_STATUS: {
        AVAILABLE: 'available',
        CLAIMED: 'claimed',
        REJECTED: 'rejected',
    },
    PLUGIN_SPECIFIC_KEYS: ['pluginOutput'],
    DELIVERY_TYPE: {
        digital: 1,
        physical: 2,
    },
    BARCODE_TYPE: {
        none: 0,
        qrcode: 1,
        code128: 2,
        code32: 3,
        datamatrix: 4,
        upca: 5,
        azteccode: 6,
    },
    FINAL_STATE: {
        CLAIMED: 'claimed',
        REDEEMED: 'redeemed',
        NULL: null,
    },
    EXPECTED_VOUCHERS_CSV_HEADER: ['experience', 'voucher', 'expiryDate'],
    GDPR_REQUEST_TYPES: {
        export: 'EXPORT',
        deletion: 'DELETION',
    },
    PATTERNS: {
        email: /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
        cid: /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,
        hashedKocid: /^[a-fA-F0-9]{64}$/,
        userTypePattern: /^([a-zA-Z]){3,4}$/,
        alphaNumericPattern: /^([a-zA-Z0-9._-]){3,80}$/,
        iamRoleName: /(?:arn:){1}(?:aws:){1}(?:iam:{2}){1}\d*(?::{1}role\/){1}(\w*)/,
        mcPinCode: /^[a-zA-Z0-9]{6,18}$/,
        mcViralCode: /^[a-zA-Z0-9]{3,30}$/,
    },
    PARAMS_MAP: {
        CONFIGURATION_ID: 'configurationId',
        CONFIGURATION_IDS: 'configurationIds',
        PROMOTION_ID: 'promotionId',
        FLOW_LABEL: 'flowLabel',
        DATE_OF_BIRTH: 'dob',
        USER_ID: 'userId',
        PARTICIPATION_ID: 'participationId',
        GPP_USER_ID: 'gppUserId',
        USER_ID_TYPE: 'userIdType',
        FILE_NAME: 'fileName',
        USER_FULL_NAME: 'name',
        USER_PHONE_NUMBER: 'phone',
        USERS_MARKETING_PREFERENCE: 'marketingPreferences',
        RECAPTCHA: 'g-recaptcha-response',
        PINS: 'pins',
        CURRENCY_ID: 'currencyId',
        PINCODES_DETAILS_ARRAY: 'pincodesDetailsArray',
        PRIZE_ID: 'prizeId',
        CURRENCY_ALLOCATION_ARRAY: 'currencyAllocations',
        START_DATE: 'startDate',
        END_DATE: 'endDate',
        PRIZE_TYPES: 'prizeTypes',
        PRIZE_QUANTITIES: 'prizeQuantities',
        EMAIL_DESTINATION: 'email',
        NAME: 'name',
        ENCRYPTED_ENTRY_ID: 'encryptedEntryId',
        DELIVERY_TYPE: 'deliveryType',
        BARCODE_TYPE: 'barcodeType',
        BARCODE_TEXT: 'barcodeText',
        CONFIGURATION: 'configuration',
        RICHTEXT_RESPONSE_TYPE: 'responseType',
        LANGUAGE: 'language',
        COUNTRY: 'country',
        FILTER: 'filter',
        SORT_ORDER: 'sortOrder',
        TEMPLATE_ID: 'templateId',
        PRIZE_DISTRIBUTION_DEFECT: 'prizeDistributionDefect',
        TIMESTAMP_DISTRIBUTION_DEFECT: 'timestampDistributionDefect',
        WINNING_MOMENTS_EXPIRATION: 'winningMomentsExpiration',
        VOUCHER: 'voucher',
        PARTICIPATION_IDS: 'participationIds',
        PRIORITY: 'priorityOrder',
        TIMESTAMPS_AMOUNT: 'timestampsAmount',
        REQUEST_TYPE: 'requestType',
        JIRA_NUMBER: 'jiraNumber',
        REQUESTER_USER_ID: 'requesterUserId',
        REQUEST_ID: 'requestId',
        ANALYSIS_LAMBDA_FLOW_PARAMS: 'analysisLambdaFlowParams',
        PROGRAM_ID: 'programId',
        LOT_ID: 'lotId',
        AMOUNT: 'amount',
        VALIDITY: 'validity',
        RULE_ID: 'ruleId',
        DELETION_TIMESTAMP: 'deletionTimestamp',
        RULE_ACTIVE: 'ruleActive',
        USER_KOID: 'userKoId',
        JIRA_TICKET_ID: 'jiraTicketId',
        LOCALIZED_DATA: 'localizedData',
        BLOCKING_USER_PARAM: 'blockingUserParams',
        OPTIONAL_INFORMATION: 'optionalInformation',
        PART_LIMIT_VER: 'partLimitVer',
        PARTICIPATION_LIMIT: 'participationLimit',
        PARTICIPATION_IMAGE: 'participationImage',
        PARTICIPATION_LIMIT_TIME: 'participationLimitTime',
        PARTICIPATION_LIMIT_START_END_DATES_RANGE: 'participationLimitStartEndDatesRange',
        PARTICIPATION_LIMIT_USE_CALENDAR_DATES: 'participationLimitUseCalendarDates',
        PARTICIPATION_LIMIT_CALENDAR_DATES_RANGE: 'participationLimitCalendarDatesRange',
        PARTICIPATION_LIMIT_CALENDAR_DATES_LIMIT: 'participationLimitCalendarDatesLimit',
        PARTICIPATION_LIMIT_CALENDAR_DATES_TIME_ZONE: 'participationLimitCalendarDatesTimeZone',
        PARTICIPATION_LIMIT_TIME_ZONE: 'participationLimitTimeZone',
        PARTICIPATION_LIFETIME_LIMIT: 'participationLifetimeLimit',
        PARTICIPATION_LIMIT_MULTIPLE_CHECKS: 'participationLimitMultipleChecks',
        OUTLET_NAME: 'outletName',
        OUTLET_ID: 'outletId',
        REDEMPTION_APP_USER: 'redemptionAppUser',
        ALLOWED_VOUCHER_STATUSES: 'allowedVoucherStatuses',
        DB_OPERATION_PARAMS: 'dbOperationParams',
        FINAL_STATE: 'finalState',
        NUMBER_OF_WINNERS: 'numberOfWinners',
        LOCALE: 'locale',
        INSTANT_WIN_LIMIT_PER_CONFIGURATION: 'instantWinLimitPerConfiguration',
        INSTANT_WIN_LIMIT_PER_TIME_INTERVAL: 'instantWinLimitPerTimeInterval',
        INSTANT_WIN_LIMIT_PER_TIME_INTERVAL_VALUE: 'instantWinLimitPerTimeIntervalValue',
        LIMIT: 'limit',
        NEXT_TOKEN: 'nextToken',
        MESSAGE_BODY: 'messageBody',
        SELECTED_STATUS: 'selectedStatus',
    },
    LOCALIZATION_FIELDS: {
        props: {
            name: 'name',
            description: 'desc',
            shortDescription: 'short_desc',
            redemptionDescription: 'redeem_desc',
            imagesMetadata: 'images_metadata',
        },
        getFieldValues() {
            return Object.values(this.props);
        },
        getFieldKeys() {
            return Object.keys(this.props);
        },
    },
};
